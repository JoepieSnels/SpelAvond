// <auto-generated />
using System;
using IndividueleCSharpProject.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations.GamenightDB
{
    [DbContext(typeof(GamenightDBContext))]
    [Migration("20250126163006_AddSchema")]
    partial class AddSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Gamenight")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamenightGames", b =>
                {
                    b.Property<int>("gameId")
                        .HasColumnType("int");

                    b.Property<int>("gameNightId")
                        .HasColumnType("int");

                    b.HasKey("gameId", "gameNightId");

                    b.HasIndex("gameNightId");

                    b.ToTable("GamenightGames", "Gamenight");

                    b.HasData(
                        new
                        {
                            gameId = 1,
                            gameNightId = 1
                        },
                        new
                        {
                            gameId = 2,
                            gameNightId = 1
                        },
                        new
                        {
                            gameId = 3,
                            gameNightId = 2
                        },
                        new
                        {
                            gameId = 4,
                            gameNightId = 2
                        });
                });

            modelBuilder.Entity("GamenightPlayers", b =>
                {
                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.Property<int>("gameNightId")
                        .HasColumnType("int");

                    b.HasKey("personId", "gameNightId");

                    b.HasIndex("gameNightId");

                    b.ToTable("GamenightPlayers", "Gamenight");

                    b.HasData(
                        new
                        {
                            personId = 3,
                            gameNightId = 1
                        },
                        new
                        {
                            personId = 2,
                            gameNightId = 1
                        });
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.GameNight", b =>
                {
                    b.Property<int>("gameNightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gameNightId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("alcoholic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hostId")
                        .HasColumnType("int");

                    b.Property<bool>("is18Plus")
                        .HasColumnType("bit");

                    b.Property<bool>("lactoseFree")
                        .HasColumnType("bit");

                    b.Property<int>("maxPlayers")
                        .HasColumnType("int");

                    b.Property<bool>("nutFree")
                        .HasColumnType("bit");

                    b.Property<bool>("vegetarian")
                        .HasColumnType("bit");

                    b.HasKey("gameNightId");

                    b.ToTable("GameNights", "Gamenight");

                    b.HasData(
                        new
                        {
                            gameNightId = 1,
                            address = "Breda",
                            alcoholic = true,
                            dateTime = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            food = "No food",
                            hostId = 1,
                            is18Plus = true,
                            lactoseFree = true,
                            maxPlayers = 4,
                            nutFree = true,
                            vegetarian = true
                        },
                        new
                        {
                            gameNightId = 2,
                            address = "Tilburg",
                            alcoholic = true,
                            dateTime = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            food = "No food",
                            hostId = 1,
                            is18Plus = true,
                            lactoseFree = true,
                            maxPlayers = 19,
                            nutFree = true,
                            vegetarian = true
                        },
                        new
                        {
                            gameNightId = 3,
                            address = "Rotterdam",
                            alcoholic = true,
                            dateTime = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            food = "No food",
                            hostId = 2,
                            is18Plus = false,
                            lactoseFree = true,
                            maxPlayers = 16,
                            nutFree = true,
                            vegetarian = true
                        },
                        new
                        {
                            gameNightId = 4,
                            address = "Roosendaal",
                            alcoholic = true,
                            dateTime = new DateTime(2025, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            food = "No food",
                            hostId = 2,
                            is18Plus = false,
                            lactoseFree = true,
                            maxPlayers = 25,
                            nutFree = true,
                            vegetarian = true
                        });
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.Games", b =>
                {
                    b.Property<int>("gameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gameId"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genre")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is18Plus")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("typeOfGame")
                        .HasColumnType("int");

                    b.HasKey("gameId");

                    b.ToTable("GamesDb", "Gamenight");

                    b.HasData(
                        new
                        {
                            gameId = 1,
                            description = "Description1",
                            genre = 4,
                            image = "Image1",
                            is18Plus = true,
                            name = "Game1",
                            typeOfGame = 0
                        },
                        new
                        {
                            gameId = 2,
                            description = "Description2",
                            genre = 4,
                            image = "Image2",
                            is18Plus = true,
                            name = "Game2",
                            typeOfGame = 2
                        },
                        new
                        {
                            gameId = 3,
                            description = "Description3",
                            genre = 4,
                            image = "Image3",
                            is18Plus = true,
                            name = "Game3",
                            typeOfGame = 1
                        },
                        new
                        {
                            gameId = 4,
                            description = "Description4",
                            genre = 4,
                            image = "Image4",
                            is18Plus = true,
                            name = "Game4",
                            typeOfGame = 0
                        });
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.Person", b =>
                {
                    b.Property<int>("personId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("personId"));

                    b.Property<bool>("alcoholic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("birthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.Property<string>("houseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lactoseFree")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("nutFree")
                        .HasColumnType("bit");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("vegatarian")
                        .HasColumnType("bit");

                    b.HasKey("personId");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Persons", "Gamenight");

                    b.HasData(
                        new
                        {
                            personId = 3,
                            alcoholic = true,
                            birthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            city = "City1",
                            email = "john.doe@email.com",
                            firstName = "John",
                            gender = 0,
                            houseNumber = "1",
                            lactoseFree = true,
                            lastName = "Doe",
                            nutFree = false,
                            street = "Street1",
                            vegatarian = false
                        },
                        new
                        {
                            personId = 2,
                            alcoholic = true,
                            birthDate = new DateTime(1992, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            city = "City2",
                            email = "jane.doe@email.com",
                            firstName = "Jane",
                            gender = 1,
                            houseNumber = "2",
                            lactoseFree = true,
                            lastName = "Doe",
                            nutFree = false,
                            street = "Street2",
                            vegatarian = false
                        });
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.Review", b =>
                {
                    b.Property<int>("reviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reviewId"));

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gameNightId")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("reviewerId")
                        .HasColumnType("int");

                    b.HasKey("reviewId");

                    b.HasIndex("gameNightId");

                    b.HasIndex("reviewerId");

                    b.ToTable("Reviews", "Gamenight");

                    b.HasData(
                        new
                        {
                            reviewId = 1,
                            comment = "Great game night!",
                            gameNightId = 1,
                            rating = 5,
                            reviewerId = 3
                        },
                        new
                        {
                            reviewId = 2,
                            comment = "Enjoyed the evening!",
                            gameNightId = 2,
                            rating = 4,
                            reviewerId = 2
                        });
                });

            modelBuilder.Entity("GamenightGames", b =>
                {
                    b.HasOne("IndividueleCSharpProject.Domain.Games", null)
                        .WithMany()
                        .HasForeignKey("gameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndividueleCSharpProject.Domain.GameNight", null)
                        .WithMany()
                        .HasForeignKey("gameNightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GamenightPlayers", b =>
                {
                    b.HasOne("IndividueleCSharpProject.Domain.GameNight", null)
                        .WithMany()
                        .HasForeignKey("gameNightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndividueleCSharpProject.Domain.Person", null)
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.Review", b =>
                {
                    b.HasOne("IndividueleCSharpProject.Domain.GameNight", "gameNight")
                        .WithMany("reviews")
                        .HasForeignKey("gameNightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndividueleCSharpProject.Domain.Person", "reviewer")
                        .WithMany("reviews")
                        .HasForeignKey("reviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gameNight");

                    b.Navigation("reviewer");
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.GameNight", b =>
                {
                    b.Navigation("reviews");
                });

            modelBuilder.Entity("IndividueleCSharpProject.Domain.Person", b =>
                {
                    b.Navigation("reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
